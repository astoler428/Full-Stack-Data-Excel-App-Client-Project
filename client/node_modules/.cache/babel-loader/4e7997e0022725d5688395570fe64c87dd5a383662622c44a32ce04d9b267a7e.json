{"ast":null,"code":"var _jsxFileName = \"/Users/aristoler/Desktop/Coding/Adam's App/Adam Excel App Mern/client/src/RandomData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PORT_URL = \"http://localhost:3000\";\nexport default function RandomData() {\n  _s();\n  const [chosenTagFilter, setChosenTagFilter] = useState(null);\n  const [filterTags, setFilterTags] = useState([]);\n  const [randomData, setRandomData] = useState(null);\n  async function getRandomData() {\n    const res = await fetch(`${PORT_URL}/data/random?tag=${chosenTagFilter}`, {\n      method: \"GET\"\n    });\n    if (res.status === 404) {\n      window.alert(\"No datapoint found with that filter\");\n      return;\n    }\n    const data = await res.json();\n    setRandomData(data.datapoint);\n\n    // randomDataPoint.tags.forEach((tag, index) => {\n    //   let tagLabel = document.createElement(\"label\");\n    //   tagLabel.className = \"existing-tag\"; //will affect margin\n    //   tagLabel.innerHTML =\n    //     index === randomDataPoint.tags.length - 1 ? `${tag} ` : `${tag}, `;\n    //   tagDiv.appendChild(tagLabel);\n    // });\n\n    //start with one tag\n    // displayNewTag();\n  }\n\n  //make custom hook useGetTags()\n  useEffect(() => {\n    async function getAllTags() {\n      const res = await fetch(`${PORT_URL}/tag`, {\n        method: \"GET\"\n      });\n      const tags = await res.json();\n      tags.unshift(\" \", \"RANDOM DATA\");\n      setFilterTags(tags);\n    }\n    getAllTags();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Filter By Tag:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"existing-tags\",\n        className: \"select-tag\",\n        value: chosenTagFilter,\n        onChange: e => setChosenTagFilter(e.target.value),\n        children: filterTags.map(tag => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: tag\n        }, Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getRandomData,\n        children: \"Get Random Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-container\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        readOnly: true,\n        className: \"data-textarea\",\n        children: randomData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"existing-tags-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Existing Tags:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(RandomData, \"Px/95yKhBCb1Vz5l2FO/+F7l5qU=\");\n_c = RandomData;\nvar _c;\n$RefreshReg$(_c, \"RandomData\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","PORT_URL","RandomData","_s","chosenTagFilter","setChosenTagFilter","filterTags","setFilterTags","randomData","setRandomData","getRandomData","res","fetch","method","status","window","alert","data","json","datapoint","getAllTags","tags","unshift","children","className","fileName","_jsxFileName","lineNumber","columnNumber","name","value","onChange","e","target","map","tag","Math","random","onClick","readOnly","_c","$RefreshReg$"],"sources":["/Users/aristoler/Desktop/Coding/Adam's App/Adam Excel App Mern/client/src/RandomData.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst PORT_URL = \"http://localhost:3000\";\n\nexport default function RandomData() {\n  const [chosenTagFilter, setChosenTagFilter] = useState(null);\n  const [filterTags, setFilterTags] = useState([]);\n  const [randomData, setRandomData] = useState(null);\n\n  async function getRandomData() {\n    const res = await fetch(`${PORT_URL}/data/random?tag=${chosenTagFilter}`, {\n      method: \"GET\",\n    });\n\n    if (res.status === 404) {\n      window.alert(\"No datapoint found with that filter\");\n      return;\n    }\n\n    const data = await res.json();\n    setRandomData(data.datapoint);\n\n    // randomDataPoint.tags.forEach((tag, index) => {\n    //   let tagLabel = document.createElement(\"label\");\n    //   tagLabel.className = \"existing-tag\"; //will affect margin\n    //   tagLabel.innerHTML =\n    //     index === randomDataPoint.tags.length - 1 ? `${tag} ` : `${tag}, `;\n    //   tagDiv.appendChild(tagLabel);\n    // });\n\n    //start with one tag\n    // displayNewTag();\n  }\n\n  //make custom hook useGetTags()\n  useEffect(() => {\n    async function getAllTags() {\n      const res = await fetch(`${PORT_URL}/tag`, {\n        method: \"GET\",\n      });\n      const tags = await res.json();\n      tags.unshift(\" \", \"RANDOM DATA\");\n      setFilterTags(tags);\n    }\n\n    getAllTags();\n  }, []);\n\n  return (\n    <>\n      <div className=\"options-container\">\n        <label>Filter By Tag:</label>\n        <select\n          name=\"existing-tags\"\n          className=\"select-tag\"\n          value={chosenTagFilter}\n          onChange={(e) => setChosenTagFilter(e.target.value)}\n        >\n          {filterTags.map((tag) => (\n            <option key={Math.random()}>{tag}</option>\n          ))}\n        </select>\n        <button onClick={getRandomData}>Get Random Data</button>\n      </div>\n      <div className=\"data-container\">\n        <textarea readOnly={true} className=\"data-textarea\">\n          {randomData}\n        </textarea>\n      </div>\n      <div className=\"existing-tags-container\">\n        <label>Existing Tags:</label>\n        <ul></ul>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}