{"ast":null,"code":"var _jsxFileName = \"/Users/aristoler/Desktop/Coding/Adam's App/Adam Excel App Mern/client/src/AddTags.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddTags(_ref) {\n  _s();\n  let {\n    updateTags,\n    randomData\n  } = _ref;\n  const [tags, setTags] = useState([\"\"]);\n  const inputTags = tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n    value: tag,\n    onChange: e => handleInputChange(e, index)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this));\n  function handleInputChange(e, index) {\n    setTags(prevTags => prevTags.map((tag, idx) => idx === index ? e.target.value : tag));\n  }\n  function createNewTag() {\n    setTags(prevTags => [...prevTags, \"\"]);\n  }\n  const displayExistingTagsOnData = randomData ? randomData.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"existing-tag\",\n    children: index === randomData.tags.length - 1 ? `${tag} ` : `${tag}, `\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this)) : \"\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"existing-tags-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Existing Tags:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: displayExistingTagsOnData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-tags-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createNewTag,\n        children: \"Add tag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), inputTags, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-tags-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"update-tags-btn\",\n      onClick: () => updateTags(tags),\n      children: \"Update Tags\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n//lift random data state up as well as handle submit\n_s(AddTags, \"Y7kxEujXCFzqAkwdEcpsSz/YSeI=\");\n_c = AddTags;\nvar _c;\n$RefreshReg$(_c, \"AddTags\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","AddTags","_ref","_s","updateTags","randomData","tags","setTags","inputTags","map","tag","index","value","onChange","e","handleInputChange","fileName","_jsxFileName","lineNumber","columnNumber","prevTags","idx","target","createNewTag","displayExistingTagsOnData","className","children","length","onClick","_c","$RefreshReg$"],"sources":["/Users/aristoler/Desktop/Coding/Adam's App/Adam Excel App Mern/client/src/AddTags.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport default function AddTags({ updateTags, randomData }) {\n  const [tags, setTags] = useState([\"\"]);\n\n  const inputTags = tags.map((tag, index) => (\n    <input\n      key={index}\n      value={tag}\n      onChange={(e) => handleInputChange(e, index)}\n    />\n  ));\n\n  function handleInputChange(e, index) {\n    setTags((prevTags) =>\n      prevTags.map((tag, idx) => (idx === index ? e.target.value : tag))\n    );\n  }\n\n  function createNewTag() {\n    setTags((prevTags) => [...prevTags, \"\"]);\n  }\n\n  const displayExistingTagsOnData = randomData\n    ? randomData.tags.map((tag, index) => (\n        <label key={index} className=\"existing-tag\">\n          {index === randomData.tags.length - 1 ? `${tag} ` : `${tag}, `}\n        </label>\n      ))\n    : \"\";\n\n  return (\n    <>\n      <div className=\"existing-tags-container\">\n        <label>Existing Tags:</label>\n        <ul>{displayExistingTagsOnData}</ul>\n      </div>\n      <div className=\"new-tags-container\">\n        <button onClick={createNewTag}>Add tag</button>\n        {inputTags}\n        <div className=\"add-tags-container\"></div>\n      </div>\n      <button className=\"update-tags-btn\" onClick={() => updateTags(tags)}>\n        Update Tags\n      </button>\n    </>\n  );\n}\n\n//lift random data state up as well as handle submit\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}