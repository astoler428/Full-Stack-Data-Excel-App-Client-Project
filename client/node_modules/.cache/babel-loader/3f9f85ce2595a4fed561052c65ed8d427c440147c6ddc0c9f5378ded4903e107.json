{"ast":null,"code":"var _jsxFileName = \"/Users/aristoler/Desktop/Coding/Adam's App/Adam Excel App Mern/client/src/TagDataHeader.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchRandomData, fetchRecentTag, fetchAllTags } from \"./apiCalls\";\nimport { useNavigate } from \"react-router-dom\";\n\n//Contains the filter by tag selection, button and textArea\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TagDataheader() {\n  _s();\n  const [chosenTagFilter, setChosenTagFilter] = useState();\n  const [randomData, setRandomData] = useState(null); //will be an object with dataPoint, id and tags[]\n  const [filterTags, setFilterTags] = useState([]);\n  // const [updatedCount, setUpdatedCount] = useState(0); //using this to track when an update happens to trigger useEffect\n  //instead of updating count called on updateTag, just navigate back to tags which will rerender\n\n  const navigate = useNavigate();\n  async function getRandomData() {\n    const res = await fetchRandomData(chosenTagFilter);\n    if (res.status === 404) {\n      window.alert(\"No datapoint found with that filter\");\n      setRandomData(null);\n      return;\n    }\n    const data = await res.json();\n    setRandomData(data);\n    navigate(`${data.id}`);\n  }\n  async function getRecentTag() {\n    const res = await fetchRecentTag();\n    const recentTag = await res.json();\n    setChosenTagFilter(recentTag.tag);\n    return recentTag;\n  }\n  useEffect(() => {\n    async function getAllTags() {\n      const res = await fetchAllTags();\n      const tags = await res.json();\n      tags.unshift(\" \", \"RANDOM DATA\");\n      setFilterTags(tags);\n    }\n    getAllTags();\n    getRecentTag();\n    setRandomData(null);\n  }, []);\n  const displayFilterTags = filterTags.map(tag => /*#__PURE__*/_jsxDEV(\"option\", {\n    children: tag\n  }, Math.random(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Filter By Tag:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"existing-tags\",\n        className: \"select-tag\",\n        value: chosenTagFilter,\n        onChange: e => setChosenTagFilter(e.target.value),\n        children: displayFilterTags\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getRandomData,\n        children: \"Get Random Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-container\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        readOnly: true,\n        className: \"data-textarea\",\n        value: randomData ? randomData.dataPoint : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TagDataheader, \"T9v4XhXyHhu7G6BN9VPrppA30KM=\", false, function () {\n  return [useNavigate];\n});\n_c = TagDataheader;\nvar _c;\n$RefreshReg$(_c, \"TagDataheader\");","map":{"version":3,"names":["React","useState","useEffect","fetchRandomData","fetchRecentTag","fetchAllTags","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","TagDataheader","_s","chosenTagFilter","setChosenTagFilter","randomData","setRandomData","filterTags","setFilterTags","navigate","getRandomData","res","status","window","alert","data","json","id","getRecentTag","recentTag","tag","getAllTags","tags","unshift","displayFilterTags","map","children","Math","random","fileName","_jsxFileName","lineNumber","columnNumber","className","name","value","onChange","e","target","onClick","readOnly","dataPoint","_c","$RefreshReg$"],"sources":["/Users/aristoler/Desktop/Coding/Adam's App/Adam Excel App Mern/client/src/TagDataHeader.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchRandomData, fetchRecentTag, fetchAllTags } from \"./apiCalls\";\nimport { useNavigate } from \"react-router-dom\";\n\n//Contains the filter by tag selection, button and textArea\n\nexport default function TagDataheader() {\n  const [chosenTagFilter, setChosenTagFilter] = useState();\n  const [randomData, setRandomData] = useState(null); //will be an object with dataPoint, id and tags[]\n  const [filterTags, setFilterTags] = useState([]);\n  // const [updatedCount, setUpdatedCount] = useState(0); //using this to track when an update happens to trigger useEffect\n  //instead of updating count called on updateTag, just navigate back to tags which will rerender\n\n  const navigate = useNavigate();\n\n  async function getRandomData() {\n    const res = await fetchRandomData(chosenTagFilter);\n\n    if (res.status === 404) {\n      window.alert(\"No datapoint found with that filter\");\n      setRandomData(null);\n      return;\n    }\n\n    const data = await res.json();\n    setRandomData(data);\n    navigate(`${data.id}`);\n  }\n\n  async function getRecentTag() {\n    const res = await fetchRecentTag();\n\n    const recentTag = await res.json();\n    setChosenTagFilter(recentTag.tag);\n    return recentTag;\n  }\n\n  useEffect(() => {\n    async function getAllTags() {\n      const res = await fetchAllTags();\n      const tags = await res.json();\n      tags.unshift(\" \", \"RANDOM DATA\");\n      setFilterTags(tags);\n    }\n    getAllTags();\n    getRecentTag();\n    setRandomData(null);\n  }, []);\n\n  const displayFilterTags = filterTags.map((tag) => (\n    <option key={Math.random()}>{tag}</option>\n  ));\n\n  return (\n    <>\n      <div className=\"options-container\">\n        <label>Filter By Tag:</label>\n        <select\n          name=\"existing-tags\"\n          className=\"select-tag\"\n          value={chosenTagFilter}\n          onChange={(e) => setChosenTagFilter(e.target.value)}\n        >\n          {displayFilterTags}\n        </select>\n        <button onClick={getRandomData}>Get Random Data</button>\n      </div>\n      <div className=\"data-container\">\n        <textarea\n          readOnly={true}\n          className=\"data-textarea\"\n          value={randomData ? randomData.dataPoint : \"\"}\n        ></textarea>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}