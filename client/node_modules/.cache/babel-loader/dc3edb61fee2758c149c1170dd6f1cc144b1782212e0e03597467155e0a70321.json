{"ast":null,"code":"var _jsxFileName = \"/Users/aristoler/Desktop/Coding/Adam's App/Adam Excel App Mern/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { Route, Routes } from \"react-router-dom\";\nimport TagPage from \"./TagPage\";\nimport Home from \"./Home.js\";\nimport AddPage from \"./AddPage.js\";\nimport Layout from \"./Layout\";\nimport { useState, createContext } from \"react\";\n\n//try manipulating background color of page by having a background color state and context? and changing it based on active\n//property of navlink\n//remove gray from css and make style document.body.style.backgroundColor = \"green\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const BackgroundContext = /*#__PURE__*/createContext(null);\nfunction App() {\n  _s();\n  const backgroundColor = useState(\"green\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BackgroundContext.Provider, {\n      value: backgroundColor,\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/data\",\n          element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 40\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"add\",\n            element: /*#__PURE__*/_jsxDEV(AddPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"tag\",\n            element: /*#__PURE__*/_jsxDEV(TagPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"DXbqZ5G/yRxFitAXAG3RAnDBzYI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","Routes","TagPage","Home","AddPage","Layout","useState","createContext","jsxDEV","_jsxDEV","Fragment","_Fragment","BackgroundContext","App","_s","backgroundColor","children","Provider","value","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aristoler/Desktop/Coding/Adam's App/Adam Excel App Mern/client/src/App.js"],"sourcesContent":["import { Route, Routes } from \"react-router-dom\";\nimport TagPage from \"./TagPage\";\nimport Home from \"./Home.js\";\nimport AddPage from \"./AddPage.js\";\nimport Layout from \"./Layout\";\nimport { useState, createContext } from \"react\";\n\n//try manipulating background color of page by having a background color state and context? and changing it based on active\n//property of navlink\n//remove gray from css and make style document.body.style.backgroundColor = \"green\";\n\nexport const BackgroundContext = createContext(null);\n\nfunction App() {\n  const backgroundColor = useState(\"green\");\n\n  return (\n    <>\n      <BackgroundContext.Provider value={backgroundColor}>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/data\" element={<Layout />}>\n            <Route path=\"add\" element={<AddPage />} />\n            <Route path=\"tag\" element={<TagPage />} />\n          </Route>\n        </Routes>\n      </BackgroundContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,OAAO,MAAM,cAAc;AAClC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,QAAQ,EAAEC,aAAa,QAAQ,OAAO;;AAE/C;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,OAAO,MAAMC,iBAAiB,gBAAGL,aAAa,CAAC,IAAI,CAAC;AAEpD,SAASM,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,eAAe,GAAGT,QAAQ,CAAC,OAAO,CAAC;EAEzC,oBACEG,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA,CAACG,iBAAiB,CAACK,QAAQ;MAACC,KAAK,EAAEH,eAAgB;MAAAC,QAAA,eACjDP,OAAA,CAACR,MAAM;QAAAe,QAAA,gBACLP,OAAA,CAACT,KAAK;UAACmB,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEX,OAAA,CAACN,IAAI;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrCf,OAAA,CAACT,KAAK;UAACmB,IAAI,EAAC,OAAO;UAACC,OAAO,eAAEX,OAAA,CAACJ,MAAM;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAAAR,QAAA,gBACtCP,OAAA,CAACT,KAAK;YAACmB,IAAI,EAAC,KAAK;YAACC,OAAO,eAAEX,OAAA,CAACL,OAAO;cAAAiB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC1Cf,OAAA,CAACT,KAAK;YAACmB,IAAI,EAAC,KAAK;YAACC,OAAO,eAAEX,OAAA,CAACP,OAAO;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACiB;EAAC,gBAC7B,CAAC;AAEP;AAACV,EAAA,CAhBQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAkBZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}